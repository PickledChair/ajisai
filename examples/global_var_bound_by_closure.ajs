func make_closure1() -> fn(i32, i32) -> i32 {
    fn(a, b) { a + b }
}

func make_closure2() -> fn(i32, i32) -> i32 {
    fn() {
        fn(a, b) { a - b }
    }()
}

val add: fn(i32, i32) -> i32 = make_closure1();
val sub: fn(i32, i32) -> i32 = make_closure2();

println_i32(add(1, 2));
println_i32(sub(1, 2));
